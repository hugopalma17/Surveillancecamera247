plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
}

android {
    namespace = "com.hpalma.Surveillance247"
    compileSdk = 34

    // Generate timestamp for unique builds
    def buildTime = new Date().format("yyyyMMdd-HHmm")
    def gitCommit = "git rev-parse --short HEAD".execute().text.trim()

    defaultConfig {
        applicationId = "com.hpalma.Surveillance247"
        minSdk = 26
        targetSdk = 34
        versionCode = 1
        versionName = "1.0.${buildTime}"

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary = true
        }

        // Set custom APK name
        setProperty("archivesBaseName", "SurveillanceCamera-v${versionName}")
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug-${buildTime}"
            // Custom APK name for debug builds
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    def appName = "SurveillanceCamera"
                    def buildType = variant.buildType.name
                    def version = variant.versionName
                    outputFileName = "${appName}-${buildType}-${version}.apk"
                }
            }
        }
        release {
            minifyEnabled = false
            proguardFiles(
                    getDefaultProguardFile("proguard-android-optimize.txt"),
                    "proguard-rules.pro"
            )
            // Custom APK name for release builds
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    def appName = "SurveillanceCamera"
                    def buildType = variant.buildType.name
                    def version = variant.versionName
                    outputFileName = "${appName}-${buildType}-${version}.apk"
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    buildFeatures {
        compose = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = libs.versions.composeCompiler.get()
    }
    packaging {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
        }
    }
    dependenciesInfo {
        includeInApk = true
        includeInBundle = true
    }
    buildToolsVersion = "34.0.0"
}

dependencies {

    implementation(libs.androidx.core.ktx)
    implementation(libs.androidx.lifecycle.runtime.ktx)
    implementation(libs.androidx.activity.compose)
    implementation(platform(libs.androidx.compose.bom))
    implementation(libs.androidx.ui)
    implementation(libs.androidx.ui.graphics)
    implementation(libs.androidx.ui.tooling.preview)
    implementation(libs.androidx.material3)
    implementation "androidx.lifecycle:lifecycle-service:${libs.versions.lifecycleRuntimeKtx.get()}"

    // CameraX dependencies
    implementation "androidx.camera:camera-core:1.3.0"
    implementation "androidx.camera:camera-camera2:1.3.0"
    implementation "androidx.camera:camera-lifecycle:1.3.0"
    implementation "androidx.camera:camera-view:1.3.0"

    // Add a simple HTTP server for RTSP-like streaming
    implementation "com.squareup.okhttp3:okhttp:4.11.0"
    implementation "org.nanohttpd:nanohttpd:2.3.1"

    // Add WebView for built-in stream viewing
    implementation "androidx.webkit:webkit:1.8.0"

    // ML Kit dependencies
    implementation(libs.mlkit.object.detection)
    implementation(libs.mlkit.face.detection)
    implementation(libs.mlkit.text.recognition)

    testImplementation(libs.junit)
    androidTestImplementation(libs.androidx.junit)
    androidTestImplementation(libs.androidx.espresso.core)
    androidTestImplementation(platform(libs.androidx.compose.bom))
    androidTestImplementation(libs.androidx.ui.test.junit4)
    debugImplementation(libs.androidx.ui.tooling)
    debugImplementation(libs.androidx.ui.test.manifest)
}